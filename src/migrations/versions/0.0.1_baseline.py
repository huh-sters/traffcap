"""baseline

Revision ID: 0.0.1
Revises: 
Create Date: 2025-01-11 13:33:26.996505

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '0.0.1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inbound_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('endpoint_code', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('method', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('body', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('fullname', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inbound_request_headers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('inbound_request_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['inbound_request_id'], ['inbound_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inbound_request_query_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('inbound_request_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['inbound_request_id'], ['inbound_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('outbound_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('template', sqlmodel.sql.sqltypes.AutoString(length=1024), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rule_matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_type', sa.Integer(), nullable=False),
    sa.Column('match', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rule_matches')
    op.drop_table('outbound_responses')
    op.drop_table('inbound_request_query_parameters')
    op.drop_table('inbound_request_headers')
    op.drop_table('users')
    op.drop_table('rules')
    op.drop_table('inbound_requests')
    # ### end Alembic commands ###
